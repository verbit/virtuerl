# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from minivirt import daemon_pb2 as minivirt_dot_daemon__pb2
from minivirt import domain_pb2 as minivirt_dot_domain__pb2
from minivirt import port_forwarding_pb2 as minivirt_dot_port__forwarding__pb2
from minivirt import volume_pb2 as minivirt_dot_volume__pb2


class DaemonServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNetwork = channel.unary_unary(
                '/internal.DaemonService/GetNetwork',
                request_serializer=minivirt_dot_domain__pb2.GetNetworkRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.Network.FromString,
                )
        self.ListNetworks = channel.unary_unary(
                '/internal.DaemonService/ListNetworks',
                request_serializer=minivirt_dot_domain__pb2.ListNetworksRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.ListNetworksResponse.FromString,
                )
        self.CreateNetwork = channel.unary_unary(
                '/internal.DaemonService/CreateNetwork',
                request_serializer=minivirt_dot_domain__pb2.CreateNetworkRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.Network.FromString,
                )
        self.DeleteNetwork = channel.unary_unary(
                '/internal.DaemonService/DeleteNetwork',
                request_serializer=minivirt_dot_domain__pb2.DeleteNetworkRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StartDomain = channel.unary_unary(
                '/internal.DaemonService/StartDomain',
                request_serializer=minivirt_dot_domain__pb2.StartDomainRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopDomain = channel.unary_unary(
                '/internal.DaemonService/StopDomain',
                request_serializer=minivirt_dot_domain__pb2.StopDomainRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetDomain = channel.unary_unary(
                '/internal.DaemonService/GetDomain',
                request_serializer=minivirt_dot_domain__pb2.GetDomainRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.Domain.FromString,
                )
        self.ListDomains = channel.unary_unary(
                '/internal.DaemonService/ListDomains',
                request_serializer=minivirt_dot_domain__pb2.ListDomainsRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.ListDomainsResponse.FromString,
                )
        self.CreateDomain = channel.unary_unary(
                '/internal.DaemonService/CreateDomain',
                request_serializer=minivirt_dot_domain__pb2.CreateDomainRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.Domain.FromString,
                )
        self.DeleteDomain = channel.unary_unary(
                '/internal.DaemonService/DeleteDomain',
                request_serializer=minivirt_dot_domain__pb2.DeleteDomainRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DownloadImage = channel.unary_stream(
                '/internal.DaemonService/DownloadImage',
                request_serializer=minivirt_dot_domain__pb2.DownloadImageRequest.SerializeToString,
                response_deserializer=minivirt_dot_domain__pb2.ImageChunk.FromString,
                )
        self.GetVolume = channel.unary_unary(
                '/internal.DaemonService/GetVolume',
                request_serializer=minivirt_dot_volume__pb2.GetVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.ListVolumes = channel.unary_unary(
                '/internal.DaemonService/ListVolumes',
                request_serializer=minivirt_dot_volume__pb2.ListVolumesRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.ListVolumesResponse.FromString,
                )
        self.CreateVolume = channel.unary_unary(
                '/internal.DaemonService/CreateVolume',
                request_serializer=minivirt_dot_volume__pb2.CreateVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.UpdateVolume = channel.unary_unary(
                '/internal.DaemonService/UpdateVolume',
                request_serializer=minivirt_dot_volume__pb2.UpdateVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.DeleteVolume = channel.unary_unary(
                '/internal.DaemonService/DeleteVolume',
                request_serializer=minivirt_dot_volume__pb2.DeleteVolumeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListVolumeAttachments = channel.unary_unary(
                '/internal.DaemonService/ListVolumeAttachments',
                request_serializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.FromString,
                )
        self.GetVolumeAttachment = channel.unary_unary(
                '/internal.DaemonService/GetVolumeAttachment',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.VolumeAttachment.FromString,
                )
        self.AttachVolume = channel.unary_unary(
                '/internal.DaemonService/AttachVolume',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.VolumeAttachment.FromString,
                )
        self.DetachVolume = channel.unary_unary(
                '/internal.DaemonService/DetachVolume',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetPortForwarding = channel.unary_unary(
                '/internal.DaemonService/GetPortForwarding',
                request_serializer=minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_port__forwarding__pb2.PortForwarding.FromString,
                )
        self.ListPortForwardings = channel.unary_unary(
                '/internal.DaemonService/ListPortForwardings',
                request_serializer=minivirt_dot_port__forwarding__pb2.ListPortForwardingsRequest.SerializeToString,
                response_deserializer=minivirt_dot_port__forwarding__pb2.ListPortForwardingsResponse.FromString,
                )
        self.PutPortForwarding = channel.unary_unary(
                '/internal.DaemonService/PutPortForwarding',
                request_serializer=minivirt_dot_port__forwarding__pb2.PutPortForwardingRequest.SerializeToString,
                response_deserializer=minivirt_dot_port__forwarding__pb2.PortForwarding.FromString,
                )
        self.DeletePortForwarding = channel.unary_unary(
                '/internal.DaemonService/DeletePortForwarding',
                request_serializer=minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SyncRoutes = channel.unary_unary(
                '/internal.DaemonService/SyncRoutes',
                request_serializer=minivirt_dot_daemon__pb2.SyncRoutesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class DaemonServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNetwork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNetworks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNetwork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNetwork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDomains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDomain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumeAttachments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolumeAttachment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AttachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortForwarding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPortForwardings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutPortForwarding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePortForwarding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DaemonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetwork,
                    request_deserializer=minivirt_dot_domain__pb2.GetNetworkRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.Network.SerializeToString,
            ),
            'ListNetworks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNetworks,
                    request_deserializer=minivirt_dot_domain__pb2.ListNetworksRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.ListNetworksResponse.SerializeToString,
            ),
            'CreateNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNetwork,
                    request_deserializer=minivirt_dot_domain__pb2.CreateNetworkRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.Network.SerializeToString,
            ),
            'DeleteNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNetwork,
                    request_deserializer=minivirt_dot_domain__pb2.DeleteNetworkRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StartDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDomain,
                    request_deserializer=minivirt_dot_domain__pb2.StartDomainRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.StopDomain,
                    request_deserializer=minivirt_dot_domain__pb2.StopDomainRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDomain,
                    request_deserializer=minivirt_dot_domain__pb2.GetDomainRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.Domain.SerializeToString,
            ),
            'ListDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDomains,
                    request_deserializer=minivirt_dot_domain__pb2.ListDomainsRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.ListDomainsResponse.SerializeToString,
            ),
            'CreateDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDomain,
                    request_deserializer=minivirt_dot_domain__pb2.CreateDomainRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.Domain.SerializeToString,
            ),
            'DeleteDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDomain,
                    request_deserializer=minivirt_dot_domain__pb2.DeleteDomainRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DownloadImage': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadImage,
                    request_deserializer=minivirt_dot_domain__pb2.DownloadImageRequest.FromString,
                    response_serializer=minivirt_dot_domain__pb2.ImageChunk.SerializeToString,
            ),
            'GetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolume,
                    request_deserializer=minivirt_dot_volume__pb2.GetVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'ListVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVolumes,
                    request_deserializer=minivirt_dot_volume__pb2.ListVolumesRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.ListVolumesResponse.SerializeToString,
            ),
            'CreateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVolume,
                    request_deserializer=minivirt_dot_volume__pb2.CreateVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'UpdateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVolume,
                    request_deserializer=minivirt_dot_volume__pb2.UpdateVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'DeleteVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVolume,
                    request_deserializer=minivirt_dot_volume__pb2.DeleteVolumeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListVolumeAttachments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVolumeAttachments,
                    request_deserializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.SerializeToString,
            ),
            'GetVolumeAttachment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolumeAttachment,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=minivirt_dot_volume__pb2.VolumeAttachment.SerializeToString,
            ),
            'AttachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.AttachVolume,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=minivirt_dot_volume__pb2.VolumeAttachment.SerializeToString,
            ),
            'DetachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.DetachVolume,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPortForwarding': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortForwarding,
                    request_deserializer=minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.FromString,
                    response_serializer=minivirt_dot_port__forwarding__pb2.PortForwarding.SerializeToString,
            ),
            'ListPortForwardings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPortForwardings,
                    request_deserializer=minivirt_dot_port__forwarding__pb2.ListPortForwardingsRequest.FromString,
                    response_serializer=minivirt_dot_port__forwarding__pb2.ListPortForwardingsResponse.SerializeToString,
            ),
            'PutPortForwarding': grpc.unary_unary_rpc_method_handler(
                    servicer.PutPortForwarding,
                    request_deserializer=minivirt_dot_port__forwarding__pb2.PutPortForwardingRequest.FromString,
                    response_serializer=minivirt_dot_port__forwarding__pb2.PortForwarding.SerializeToString,
            ),
            'DeletePortForwarding': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePortForwarding,
                    request_deserializer=minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SyncRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncRoutes,
                    request_deserializer=minivirt_dot_daemon__pb2.SyncRoutesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'internal.DaemonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DaemonService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/GetNetwork',
            minivirt_dot_domain__pb2.GetNetworkRequest.SerializeToString,
            minivirt_dot_domain__pb2.Network.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNetworks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/ListNetworks',
            minivirt_dot_domain__pb2.ListNetworksRequest.SerializeToString,
            minivirt_dot_domain__pb2.ListNetworksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/CreateNetwork',
            minivirt_dot_domain__pb2.CreateNetworkRequest.SerializeToString,
            minivirt_dot_domain__pb2.Network.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/DeleteNetwork',
            minivirt_dot_domain__pb2.DeleteNetworkRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/StartDomain',
            minivirt_dot_domain__pb2.StartDomainRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/StopDomain',
            minivirt_dot_domain__pb2.StopDomainRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/GetDomain',
            minivirt_dot_domain__pb2.GetDomainRequest.SerializeToString,
            minivirt_dot_domain__pb2.Domain.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/ListDomains',
            minivirt_dot_domain__pb2.ListDomainsRequest.SerializeToString,
            minivirt_dot_domain__pb2.ListDomainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/CreateDomain',
            minivirt_dot_domain__pb2.CreateDomainRequest.SerializeToString,
            minivirt_dot_domain__pb2.Domain.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/DeleteDomain',
            minivirt_dot_domain__pb2.DeleteDomainRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/internal.DaemonService/DownloadImage',
            minivirt_dot_domain__pb2.DownloadImageRequest.SerializeToString,
            minivirt_dot_domain__pb2.ImageChunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/GetVolume',
            minivirt_dot_volume__pb2.GetVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/ListVolumes',
            minivirt_dot_volume__pb2.ListVolumesRequest.SerializeToString,
            minivirt_dot_volume__pb2.ListVolumesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/CreateVolume',
            minivirt_dot_volume__pb2.CreateVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/UpdateVolume',
            minivirt_dot_volume__pb2.UpdateVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/DeleteVolume',
            minivirt_dot_volume__pb2.DeleteVolumeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumeAttachments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/ListVolumeAttachments',
            minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.SerializeToString,
            minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolumeAttachment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/GetVolumeAttachment',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            minivirt_dot_volume__pb2.VolumeAttachment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AttachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/AttachVolume',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            minivirt_dot_volume__pb2.VolumeAttachment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/DetachVolume',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortForwarding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/GetPortForwarding',
            minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.SerializeToString,
            minivirt_dot_port__forwarding__pb2.PortForwarding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPortForwardings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/ListPortForwardings',
            minivirt_dot_port__forwarding__pb2.ListPortForwardingsRequest.SerializeToString,
            minivirt_dot_port__forwarding__pb2.ListPortForwardingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutPortForwarding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/PutPortForwarding',
            minivirt_dot_port__forwarding__pb2.PutPortForwardingRequest.SerializeToString,
            minivirt_dot_port__forwarding__pb2.PortForwarding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePortForwarding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/DeletePortForwarding',
            minivirt_dot_port__forwarding__pb2.PortForwardingIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/internal.DaemonService/SyncRoutes',
            minivirt_dot_daemon__pb2.SyncRoutesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
