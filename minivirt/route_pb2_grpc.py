# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from minivirt import route_pb2 as minivirt_dot_route__pb2


class RouteServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRouteTable = channel.unary_unary(
                '/RouteService/GetRouteTable',
                request_serializer=minivirt_dot_route__pb2.RouteTableIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.RouteTable.FromString,
                )
        self.ListRouteTables = channel.unary_unary(
                '/RouteService/ListRouteTables',
                request_serializer=minivirt_dot_route__pb2.ListRouteTablesRequest.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.ListRouteTablesResponse.FromString,
                )
        self.CreateRouteTable = channel.unary_unary(
                '/RouteService/CreateRouteTable',
                request_serializer=minivirt_dot_route__pb2.CreateRouteTableRequest.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.RouteTable.FromString,
                )
        self.DeleteRouteTable = channel.unary_unary(
                '/RouteService/DeleteRouteTable',
                request_serializer=minivirt_dot_route__pb2.RouteTableIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetRoute = channel.unary_unary(
                '/RouteService/GetRoute',
                request_serializer=minivirt_dot_route__pb2.RouteIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.Route.FromString,
                )
        self.ListRoutes = channel.unary_unary(
                '/RouteService/ListRoutes',
                request_serializer=minivirt_dot_route__pb2.ListRoutesRequest.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.ListRoutesResponse.FromString,
                )
        self.PutRoute = channel.unary_unary(
                '/RouteService/PutRoute',
                request_serializer=minivirt_dot_route__pb2.PutRouteRequest.SerializeToString,
                response_deserializer=minivirt_dot_route__pb2.Route.FromString,
                )
        self.DeleteRoute = channel.unary_unary(
                '/RouteService/DeleteRoute',
                request_serializer=minivirt_dot_route__pb2.RouteIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Sync = channel.unary_unary(
                '/RouteService/Sync',
                request_serializer=minivirt_dot_route__pb2.SyncRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class RouteServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRouteTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRouteTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRouteTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRouteTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sync(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRouteTable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRouteTable,
                    request_deserializer=minivirt_dot_route__pb2.RouteTableIdentifier.FromString,
                    response_serializer=minivirt_dot_route__pb2.RouteTable.SerializeToString,
            ),
            'ListRouteTables': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRouteTables,
                    request_deserializer=minivirt_dot_route__pb2.ListRouteTablesRequest.FromString,
                    response_serializer=minivirt_dot_route__pb2.ListRouteTablesResponse.SerializeToString,
            ),
            'CreateRouteTable': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRouteTable,
                    request_deserializer=minivirt_dot_route__pb2.CreateRouteTableRequest.FromString,
                    response_serializer=minivirt_dot_route__pb2.RouteTable.SerializeToString,
            ),
            'DeleteRouteTable': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRouteTable,
                    request_deserializer=minivirt_dot_route__pb2.RouteTableIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoute,
                    request_deserializer=minivirt_dot_route__pb2.RouteIdentifier.FromString,
                    response_serializer=minivirt_dot_route__pb2.Route.SerializeToString,
            ),
            'ListRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRoutes,
                    request_deserializer=minivirt_dot_route__pb2.ListRoutesRequest.FromString,
                    response_serializer=minivirt_dot_route__pb2.ListRoutesResponse.SerializeToString,
            ),
            'PutRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.PutRoute,
                    request_deserializer=minivirt_dot_route__pb2.PutRouteRequest.FromString,
                    response_serializer=minivirt_dot_route__pb2.Route.SerializeToString,
            ),
            'DeleteRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRoute,
                    request_deserializer=minivirt_dot_route__pb2.RouteIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Sync': grpc.unary_unary_rpc_method_handler(
                    servicer.Sync,
                    request_deserializer=minivirt_dot_route__pb2.SyncRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RouteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RouteService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRouteTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/GetRouteTable',
            minivirt_dot_route__pb2.RouteTableIdentifier.SerializeToString,
            minivirt_dot_route__pb2.RouteTable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRouteTables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/ListRouteTables',
            minivirt_dot_route__pb2.ListRouteTablesRequest.SerializeToString,
            minivirt_dot_route__pb2.ListRouteTablesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRouteTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/CreateRouteTable',
            minivirt_dot_route__pb2.CreateRouteTableRequest.SerializeToString,
            minivirt_dot_route__pb2.RouteTable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRouteTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/DeleteRouteTable',
            minivirt_dot_route__pb2.RouteTableIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/GetRoute',
            minivirt_dot_route__pb2.RouteIdentifier.SerializeToString,
            minivirt_dot_route__pb2.Route.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/ListRoutes',
            minivirt_dot_route__pb2.ListRoutesRequest.SerializeToString,
            minivirt_dot_route__pb2.ListRoutesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/PutRoute',
            minivirt_dot_route__pb2.PutRouteRequest.SerializeToString,
            minivirt_dot_route__pb2.Route.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/DeleteRoute',
            minivirt_dot_route__pb2.RouteIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RouteService/Sync',
            minivirt_dot_route__pb2.SyncRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
