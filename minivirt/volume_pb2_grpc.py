# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from minivirt import volume_pb2 as minivirt_dot_volume__pb2


class VolumeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVolume = channel.unary_unary(
                '/VolumeService/GetVolume',
                request_serializer=minivirt_dot_volume__pb2.GetVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.ListVolumes = channel.unary_unary(
                '/VolumeService/ListVolumes',
                request_serializer=minivirt_dot_volume__pb2.ListVolumesRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.ListVolumesResponse.FromString,
                )
        self.CreateVolume = channel.unary_unary(
                '/VolumeService/CreateVolume',
                request_serializer=minivirt_dot_volume__pb2.CreateVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.UpdateVolume = channel.unary_unary(
                '/VolumeService/UpdateVolume',
                request_serializer=minivirt_dot_volume__pb2.UpdateVolumeRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.Volume.FromString,
                )
        self.DeleteVolume = channel.unary_unary(
                '/VolumeService/DeleteVolume',
                request_serializer=minivirt_dot_volume__pb2.DeleteVolumeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListVolumeAttachments = channel.unary_unary(
                '/VolumeService/ListVolumeAttachments',
                request_serializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.FromString,
                )
        self.GetVolumeAttachment = channel.unary_unary(
                '/VolumeService/GetVolumeAttachment',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.VolumeAttachment.FromString,
                )
        self.AttachVolume = channel.unary_unary(
                '/VolumeService/AttachVolume',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=minivirt_dot_volume__pb2.VolumeAttachment.FromString,
                )
        self.DetachVolume = channel.unary_unary(
                '/VolumeService/DetachVolume',
                request_serializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class VolumeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVolumeAttachments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVolumeAttachment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AttachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetachVolume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VolumeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolume,
                    request_deserializer=minivirt_dot_volume__pb2.GetVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'ListVolumes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVolumes,
                    request_deserializer=minivirt_dot_volume__pb2.ListVolumesRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.ListVolumesResponse.SerializeToString,
            ),
            'CreateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVolume,
                    request_deserializer=minivirt_dot_volume__pb2.CreateVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'UpdateVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVolume,
                    request_deserializer=minivirt_dot_volume__pb2.UpdateVolumeRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.Volume.SerializeToString,
            ),
            'DeleteVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVolume,
                    request_deserializer=minivirt_dot_volume__pb2.DeleteVolumeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListVolumeAttachments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVolumeAttachments,
                    request_deserializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.FromString,
                    response_serializer=minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.SerializeToString,
            ),
            'GetVolumeAttachment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVolumeAttachment,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=minivirt_dot_volume__pb2.VolumeAttachment.SerializeToString,
            ),
            'AttachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.AttachVolume,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=minivirt_dot_volume__pb2.VolumeAttachment.SerializeToString,
            ),
            'DetachVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.DetachVolume,
                    request_deserializer=minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'VolumeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VolumeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/GetVolume',
            minivirt_dot_volume__pb2.GetVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/ListVolumes',
            minivirt_dot_volume__pb2.ListVolumesRequest.SerializeToString,
            minivirt_dot_volume__pb2.ListVolumesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/CreateVolume',
            minivirt_dot_volume__pb2.CreateVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/UpdateVolume',
            minivirt_dot_volume__pb2.UpdateVolumeRequest.SerializeToString,
            minivirt_dot_volume__pb2.Volume.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/DeleteVolume',
            minivirt_dot_volume__pb2.DeleteVolumeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVolumeAttachments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/ListVolumeAttachments',
            minivirt_dot_volume__pb2.ListVolumeAttachmentsRequest.SerializeToString,
            minivirt_dot_volume__pb2.ListVolumeAttachmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVolumeAttachment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/GetVolumeAttachment',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            minivirt_dot_volume__pb2.VolumeAttachment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AttachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/AttachVolume',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            minivirt_dot_volume__pb2.VolumeAttachment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetachVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VolumeService/DetachVolume',
            minivirt_dot_volume__pb2.VolumeAttachmentIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
