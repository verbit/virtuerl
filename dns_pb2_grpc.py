# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dns_pb2 as dns__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DNSStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDNSRecord = channel.unary_unary(
                '/DNS/GetDNSRecord',
                request_serializer=dns__pb2.DNSRecordIdentifier.SerializeToString,
                response_deserializer=dns__pb2.DNSRecord.FromString,
                )
        self.ListDNSRecords = channel.unary_unary(
                '/DNS/ListDNSRecords',
                request_serializer=dns__pb2.ListDNSRecordsRequest.SerializeToString,
                response_deserializer=dns__pb2.ListDNSRecordsResponse.FromString,
                )
        self.PutDNSRecord = channel.unary_unary(
                '/DNS/PutDNSRecord',
                request_serializer=dns__pb2.PutDNSRecordRequest.SerializeToString,
                response_deserializer=dns__pb2.DNSRecord.FromString,
                )
        self.DeleteDNSRecord = channel.unary_unary(
                '/DNS/DeleteDNSRecord',
                request_serializer=dns__pb2.DNSRecordIdentifier.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class DNSServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDNSRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDNSRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutDNSRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDNSRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DNSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDNSRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDNSRecord,
                    request_deserializer=dns__pb2.DNSRecordIdentifier.FromString,
                    response_serializer=dns__pb2.DNSRecord.SerializeToString,
            ),
            'ListDNSRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDNSRecords,
                    request_deserializer=dns__pb2.ListDNSRecordsRequest.FromString,
                    response_serializer=dns__pb2.ListDNSRecordsResponse.SerializeToString,
            ),
            'PutDNSRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.PutDNSRecord,
                    request_deserializer=dns__pb2.PutDNSRecordRequest.FromString,
                    response_serializer=dns__pb2.DNSRecord.SerializeToString,
            ),
            'DeleteDNSRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDNSRecord,
                    request_deserializer=dns__pb2.DNSRecordIdentifier.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DNS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DNS(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDNSRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DNS/GetDNSRecord',
            dns__pb2.DNSRecordIdentifier.SerializeToString,
            dns__pb2.DNSRecord.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDNSRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DNS/ListDNSRecords',
            dns__pb2.ListDNSRecordsRequest.SerializeToString,
            dns__pb2.ListDNSRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutDNSRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DNS/PutDNSRecord',
            dns__pb2.PutDNSRecordRequest.SerializeToString,
            dns__pb2.DNSRecord.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDNSRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DNS/DeleteDNSRecord',
            dns__pb2.DNSRecordIdentifier.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
